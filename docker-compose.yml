services:
  postgres_new:
    image: postgres:15
    container_name: Blazed
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_new_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      timeout: 20s
      retries: 10
      start_period: 20s

  nestjs_app:
    container_name: nestjs_app
    build:
      context: ./back
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      postgres_new:
        condition: service_healthy
    ports:
      - '3000:3000'

  react_app:
    container_name: react_app
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - '3301:3301'
    volumes:
      - ./front:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}

volumes:
  postgres_new_data:
